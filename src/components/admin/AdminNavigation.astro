---
import jwt from 'jsonwebtoken';

const navigation = [
  { name: 'Dashboard', href: '/admin', current: true },
  { name: 'Recipes', href: '/admin/recipes', current: false },
  { name: 'Blog Posts', href: '/admin/blog', current: false },
  { name: 'Media', href: '/admin/media', current: false },
  { name: 'Settings', href: '/admin/settings', current: false },
];

function classNames(...classes: string[]) {
  return classes.filter(Boolean).join(' ');
}

const currentPath = Astro.url.pathname;

// Get admin data from JWT for welcome message
const JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key-change-this-in-production';
const token = Astro.cookies.get('auth_token')?.value;
let adminName = 'Admin';

if (token) {
  try {
    const decoded = jwt.verify(token, JWT_SECRET);
    adminName = decoded.name || decoded.username || 'Admin';
  } catch (e) {
    console.error('Error decoding JWT token:', e);
  }
}
---

<nav class="bg-white dark:bg-gray-800 shadow">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 justify-between">
      <div class="flex">
        <div class="flex flex-shrink-0 items-center">
          <a href="/admin" class="text-2xl font-bold text-jamie-orange">
            FFW Admin
          </a>
        </div>
        <div class="hidden sm:ml-6 sm:flex sm:space-x-8">
          {navigation.map((item) => (
            <a
              href={item.href}
              class={classNames(
                currentPath === item.href || 
                (item.href !== '/admin' && currentPath.startsWith(item.href + '/'))
                  ? 'border-jamie-orange text-gray-900 dark:text-white'
                  : 'border-transparent text-gray-500 dark:text-gray-300 hover:border-gray-300 hover:text-gray-700 dark:hover:text-gray-200',
                'inline-flex items-center border-b-2 px-1 pt-1 text-sm font-medium'
              )}
              aria-current={currentPath === item.href ? 'page' : undefined}
            >
              {item.name}
            </a>
          ))}
        </div>
      </div>
      <div class="hidden sm:ml-6 sm:flex sm:items-center">
        <div class="relative ml-3">
          <div class="flex items-center space-x-4">
            <span class="text-sm text-gray-700 dark:text-gray-300">Welcome, {adminName}</span>
            <button
              type="button"
              id="logoutBtn"
              class="flex items-center rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-medium text-jamie-orange hover:bg-amber-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-jamie-orange focus:ring-offset-2"
            >
              <svg class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75" />
              </svg>
              Logout
            </button>
          </div>
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="flex items-center sm:hidden">
        <button
          type="button"
          id="mobile-menu-button"
          class="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 dark:hover:bg-gray-700 dark:hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-jamie-orange"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="sm:hidden hidden" id="mobile-menu">
    <div class="space-y-1 pb-3 pt-2">
      {navigation.map((item) => (
        <a
          href={item.href}
          class={classNames(
            currentPath === item.href || 
            (item.href !== '/admin' && currentPath.startsWith(item.href + '/'))
              ? 'bg-jamie-orange/10 border-jamie-orange text-jamie-orange'
              : 'border-transparent text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 hover:border-gray-300 hover:text-gray-700 dark:hover:text-gray-200',
            'block border-l-4 py-2 pl-3 pr-4 text-base font-medium'
          )}
          aria-current={currentPath === item.href ? 'page' : undefined}
        >
          {item.name}
        </a>
      ))}
    </div>
    <div class="border-t border-gray-200 dark:border-gray-700 pb-3 pt-4">
      <div class="flex items-center justify-between px-4">
        <div class="flex items-center">
          <div class="ml-3">
            <div class="text-base font-medium text-gray-800 dark:text-white">{adminName}</div>
          </div>
        </div>
        <button
          type="button"
          id="mobile-logout-btn"
          class="flex items-center rounded-md bg-white dark:bg-gray-800 px-3 py-2 text-sm font-medium text-jamie-orange hover:bg-amber-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-jamie-orange focus:ring-offset-2"
        >
          <svg class="mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75" />
          </svg>
          Logout
        </button>
      </div>
    </div>
  </div>
</nav>

<script>
  // Setup logout functionality
  document.addEventListener('DOMContentLoaded', () => {
    const logoutBtn = document.getElementById('logoutBtn');
    const mobileLogoutBtn = document.getElementById('mobile-logout-btn');
    const mobileMenuBtn = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    // Toggle mobile menu
    mobileMenuBtn?.addEventListener('click', () => {
      const expanded = mobileMenuBtn.getAttribute('aria-expanded') === 'true';
      mobileMenuBtn.setAttribute('aria-expanded', (!expanded).toString());
      mobileMenu?.classList.toggle('hidden');
    });
    
    // Handle logout for both desktop and mobile
    const handleLogout = async () => {
      try {
        const response = await fetch('/api/admin/logout', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
        });
        
        if (response.ok) {
          window.location.href = '/admin/login';
        } else {
          console.error('Logout failed');
        }
      } catch (error) {
        console.error('Error during logout:', error);
      }
    };
    
    logoutBtn?.addEventListener('click', handleLogout);
    mobileLogoutBtn?.addEventListener('click', handleLogout);
  });
</script>
