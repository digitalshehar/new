---
import { Image } from 'astro:assets';

interface Recipe {
  title: string;
  description: string;
  image: string;
  cookingTime: string;
  difficulty: string;
  slug: string;
  rating: number;
}

interface Props {
  currentRecipe: string;
  categories: string[];
}

const { currentRecipe, categories } = Astro.props;

// In a real app, this would be fetched from a database
const relatedRecipes: Recipe[] = [
  {
    title: "Mediterranean Grilled Vegetables",
    description: "Colorful seasonal vegetables grilled to perfection with herbs and olive oil.",
    image: "/images/recipes/grilled-vegetables.jpg",
    cookingTime: "30 minutes",
    difficulty: "Easy",
    slug: "mediterranean-vegetables",
    rating: 4.6
  },
  {
    title: "Roasted Beetroot & Feta Salad",
    description: "Sweet roasted beetroot paired with creamy feta and crunchy walnuts.",
    image: "/images/recipes/beetroot-salad.jpg",
    cookingTime: "45 minutes",
    difficulty: "Easy",
    slug: "beetroot-feta-salad",
    rating: 4.7
  },
  {
    title: "Summer Quinoa Salad",
    description: "Light and refreshing quinoa salad with fresh herbs and citrus dressing.",
    image: "/images/recipes/quinoa-salad.jpg",
    cookingTime: "20 minutes",
    difficulty: "Easy",
    slug: "summer-quinoa-salad",
    rating: 4.8
  }
];
---

<section class="related-recipes mt-16 pt-8 border-t border-gray-200">
  <h2 class="text-2xl font-bold text-jamie-blue mb-8">You might also like</h2>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {relatedRecipes.map(recipe => (
      <a href={`/recipes/${recipe.slug}`} class="group">
        <article class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow">
          <div class="relative h-48">
            <img
              src={recipe.image}
              alt={recipe.title}
              class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
            />
            <div class="absolute top-4 right-4 bg-white rounded-full px-2 py-1 text-sm font-medium text-gray-600">
              {recipe.cookingTime}
            </div>
          </div>
          <div class="p-4">
            <h3 class="text-lg font-semibold text-gray-900 group-hover:text-jamie-orange transition-colors mb-2">
              {recipe.title}
            </h3>
            <p class="text-gray-600 text-sm mb-3 line-clamp-2">
              {recipe.description}
            </p>
            <div class="flex items-center justify-between">
              <span class="text-sm text-gray-500">{recipe.difficulty}</span>
              <div class="flex items-center">
                <span class="text-yellow-400">
                  {Array.from({ length: 5 }).map((_, i) => (
                    <span class="inline-block">
                      <svg
                        class={`w-4 h-4 ${i < Math.floor(recipe.rating) ? 'text-yellow-400' : 'text-gray-300'}`}
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                    </span>
                  ))}
                </span>
                <span class="ml-1 text-sm text-gray-500">{recipe.rating}</span>
              </div>
            </div>
          </div>
        </article>
      </a>
    ))}
  </div>
</section>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
