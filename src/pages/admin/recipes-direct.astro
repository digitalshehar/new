---
import AdminDirectLayout from '../../layouts/AdminDirectLayout.astro';
import { recipes } from '../../data/recipes';
import RecipeStats from '../../components/admin/RecipeStats';
import AdminRecipeCard from '../../components/admin/AdminRecipeCard';

// Convert the recipes object to an array for display
const recipesList = Object.values(recipes);

// No authentication check on this page - direct access
---

<AdminDirectLayout title="Recipes | Admin Direct Access">
  <div class="py-6 motion-container">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 md:px-8">
      <h1 class="text-2xl font-semibold text-gray-900 dark:text-white motion-intersect" data-motion-direction="left">Recipes (Direct Access)</h1>
      <div class="mt-4 bg-amber-100 border border-amber-400 text-amber-700 px-4 py-3 rounded relative motion-intersect" role="alert">
        <strong class="font-bold">Direct Access Mode!</strong>
        <span class="block sm:inline"> This is a special dashboard version with no login required. For security, replace with authenticated version in production.</span>
      </div>
    </div>
    
    <!-- Recipe Statistics Component -->
    <div class="mx-auto max-w-7xl px-4 sm:px-6 md:px-8 mt-8 motion-intersect">
      <RecipeStats client:load />
    </div>
    
    <div class="mx-auto max-w-7xl mt-8 px-4 sm:px-6 md:px-8">
      <div class="flex justify-between items-center mb-6 motion-intersect" data-motion-direction="right">
        <h2 class="text-lg font-medium text-gray-900 dark:text-white">Recipe List</h2>
        <div>
          <button
            class="btn-pulse inline-flex items-center rounded-md border border-transparent bg-jamie-orange px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-amber-600 focus:outline-none focus:ring-2 focus:ring-jamie-orange focus:ring-offset-2 transition-all duration-300 hover:scale-105"
          >
            <svg class="-ml-1 mr-2 h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
            </svg>
            New Recipe
          </button>
        </div>
      </div>
      
      <!-- Recipe Grid View (Mobile and Tablet) -->
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mb-8 lg:hidden" 
           data-motion-stagger data-motion-delay="50">
        {recipesList.map((recipe, index) => (
          <div class="motion-item">
            <AdminRecipeCard 
              recipe={recipe} 
              client:load 
              onEdit={(slug) => {
                alert('Edit functionality disabled in direct access mode');
              }}
              onDelete={(slug, title) => {
                alert('Delete functionality disabled in direct access mode');
              }}
            />
          </div>
        ))}
      </div>
      
      <!-- Recipe table (Desktop) -->
      <div class="hidden lg:block motion-intersect" data-motion-once="true">
        <div class="mt-4 flex flex-col motion-container">
          <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
              <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 sm:rounded-lg">
                <table class="min-w-full divide-y divide-gray-300 dark:divide-gray-700">
                  <thead class="bg-gray-50 dark:bg-gray-800">
                    <tr>
                      <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-white sm:pl-6">Name</th>
                      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-white">Category</th>
                      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-white">Cook Time</th>
                      <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-white">Difficulty</th>
                      <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
                        <span class="sr-only">Actions</span>
                      </th>
                    </tr>
                  </thead>
                  <tbody class="divide-y divide-gray-200 dark:divide-gray-700 bg-white dark:bg-gray-900" data-motion-stagger data-motion-delay="50">
                    {recipesList.map((recipe) => (
                      <tr class="motion-item hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors duration-150">
                        <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-white sm:pl-6">
                          {recipe.title}
                        </td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-400">{recipe.category}</td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-400">{recipe.cookingTime}</td>
                        <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-400">{recipe.difficulty}</td>
                        <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
                          <div class="flex justify-end space-x-2">
                            <button class="text-jamie-orange hover:text-amber-700 transition-colors duration-200">
                              Edit
                            </button>
                            <button class="text-red-600 hover:text-red-900 transition-colors duration-200">
                              Delete
                            </button>
                          </div>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</AdminDirectLayout>

<style>
  /* Recipe table row animation */
  tbody tr {
    transition: background-color 0.2s ease, transform 0.2s ease;
  }
  
  tbody tr:hover {
    transform: translateY(-2px);
  }
  
  /* Animated fade in for recipe cards */
  @keyframes fadeUpIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Add alert for buttons in direct access mode
  document.addEventListener('DOMContentLoaded', () => {
    const editButtons = document.querySelectorAll('button.text-jamie-orange');
    const deleteButtons = document.querySelectorAll('button.text-red-600');
    
    const showAlert = (e, message) => {
      e.preventDefault();
      alert(message);
    };
    
    editButtons.forEach(button => {
      button.addEventListener('click', (e) => showAlert(e, 'Edit functionality disabled in direct access mode'));
    });
    
    deleteButtons.forEach(button => {
      button.addEventListener('click', (e) => showAlert(e, 'Delete functionality disabled in direct access mode'));
    });
  });
</script>
