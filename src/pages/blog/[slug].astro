---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import RelatedPosts from '../../components/blog/RelatedPosts.astro';
import { NewsletterSignup } from '../../components/blog/NewsletterSignup';
import { getBlogPost, getBlogPosts } from '../../lib/api';
import type { BlogPost } from '../../types';

export async function getStaticPaths() {
  const posts = await getBlogPosts();
  
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Props {
  post: BlogPost;
}

const { post } = Astro.props;
const allPosts = await getBlogPosts();

// Format date
const formattedDate = new Date(post.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={`${post.title} | Food From Within`}>
  <Navigation />

  <main class="pt-32 pb-16">
    <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <header class="text-center mb-16">
        {post.category && (
          <span class="inline-block px-4 py-1 rounded-full bg-jamie-orange text-white text-sm font-medium mb-4">
            {post.category}
          </span>
        )}
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
          {post.title}
        </h1>
        <div class="flex items-center justify-center space-x-4 text-gray-600 dark:text-gray-400">
          <div class="flex items-center">
            <img
              src={`/images/authors/${post.author.toLowerCase().replace(' ', '-')}.jpg`}
              alt={post.author}
              class="w-10 h-10 rounded-full mr-3"
              onerror="this.src='/images/default-avatar.jpg'"
            />
            <span>{post.author}</span>
          </div>
          <span>·</span>
          <time datetime={post.date}>{formattedDate}</time>
          {post.readTime && (
            <>
              <span>·</span>
              <span>{post.readTime}</span>
            </>
          )}
        </div>
      </header>

      <!-- Featured Image -->
      {post.image && (
        <div class="relative aspect-[21/9] mb-16 rounded-xl overflow-hidden">
          <img
            src={post.image}
            alt={post.title}
            class="w-full h-full object-cover"
          />
        </div>
      )}

      <!-- Content -->
      <div class="prose prose-lg dark:prose-invert max-w-none">
        <Fragment set:html={post.content} />
      </div>

      <!-- Tags -->
      {post.tags && post.tags.length > 0 && (
        <div class="mt-12 pt-6 border-t border-gray-200 dark:border-gray-700">
          <h2 class="text-sm font-semibold text-gray-600 dark:text-gray-400 uppercase tracking-wider mb-4">
            Tags
          </h2>
          <div class="flex flex-wrap gap-2">
            {post.tags.map(tag => (
              <a
                href={`/blog/tag/${tag}`}
                class="inline-block px-3 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        </div>
      )}
    </article>

    <!-- Newsletter -->
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <NewsletterSignup client:load />
    </div>

    <!-- Related Posts -->
    <RelatedPosts currentPost={post} allPosts={allPosts} />
  </main>
</Layout>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  // Animate content sections
  gsap.from('header', {
    y: 30,
    opacity: 0,
    duration: 1,
    ease: 'power3.out'
  });

  gsap.from('.prose > *', {
    y: 30,
    opacity: 0,
    duration: 0.8,
    stagger: 0.1,
    scrollTrigger: {
      trigger: '.prose',
      start: 'top bottom-=100',
      toggleActions: 'play none none reverse'
    }
  });
</script>
